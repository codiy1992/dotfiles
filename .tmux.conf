# @link https://github.com/square/maximum-awesome
# @link https://github.com/gpakosz/.tmux

# ---
# --- General
# ---

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

set -g default-terminal screen-256color   # colors!
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

set -g base-index 1                       # start windows numbering at 1
setw -g pane-base-index 1                 # make pane numbering consistent with windows

setw -g automatic-rename on               # rename window to reflect current program
set -g renumber-windows on                # renumber windows when a window is closed

set -g set-titles on                      # set terminal title

set -g display-panes-time 800             # slightly longer pane indicators display time
set -g display-time 1000                  # slightly longer status messages display time
set-window-option -g display-panes-time 1500

#Set window notifications
setw -g monitor-activity on
set -g visual-activity on

set -g mouse on # mouse behavior


bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# ---
# --- Easy config reload
# ---
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# ---
# --- copy mode : vim, start selection with 'space' and copy using 'y'
# ---
setw -g mode-keys vi          #    set vi mode for copy mode
unbind p
bind p paste-buffer           #    paste using 'p'
bind-key -T copy-mode-vi v send-keys -X begin-selection ;
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" ;
unbind -T copy-mode-vi Enter;
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy";

# ---
# --- Panes Management: use vim-like keys for splits and windows
# ---
# <C-d> # Close Current pane
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
bind-key i split-window -h -c "#{pane_current_path}"
bind-key b split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# pane resizing
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10
# others
bind-key enter next-layout
bind-key C-o rotate-window
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
bind-key a last-pane
bind-key q display-panes
# use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# ---
# --- Windows Management
# ---
bind-key space next-window
bind-key bspace previous-window
# <prefix> c # Create new window
# <prefix> 1 # Switch to window 1
# <prefix> 2 # Switch to window 2 (etc.)
# <prefix> x # Kill current window
# <prefix> w # Switch window
# bind-key t next-window
# bind-key T previous-window

# ---
# --- Sessions Management
# ---
# <prefix> d # detach session
bind C-c new-session # create session
bind C-f command-prompt -p find-session 'switch-client -t %%' # find session

# ---
# --- Status Bar
# ---
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-style fg=magenta
set-option -g status-style fg=default
# Status Bar solarized-dark (default)
set-option -g status-style bg=black
set-option -g pane-active-border-style fg=black
set-option -g pane-border-style fg=black
# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-style bg=white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-style fg=white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-style fg=white"


# ---
# --- Others
# ---
# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set-option -g assume-paste-time 0

bind-key -r f run-shell "tmux neww cht"
